# Azure Pipelines
# https://aka.ms/yaml

name: OAT_PR_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)
trigger: none
pr:
  branches:
    include:
    - main

resources:
  repositories:
    - repository: templates
      type: git
      name: SecurityEngineering/OSS-Tools-Pipeline-Templates
      ref: refs/tags/v2.0.1
    - repository: 1esPipelines
      type: git
      name: 1ESPipelineTemplates/1ESPipelineTemplates
      ref: refs/tags/release

variables:
  BuildConfiguration: 'Release'
  dotnetVersion: '9.0.x'

extends:
  template: v1/1ES.Official.PipelineTemplate.yml@1esPipelines
  parameters:
    pool:
      name: MSSecurity-1ES-Build-Agents-Pool
      image: MSSecurity-1ES-Windows-2022
      os: windows
    stages:
    - stage: Test
      dependsOn: []
      jobs:
      # - job: 'vs_test_windows'
      #   pool:
      #     name: MSSecurity-1ES-Build-Agents-Pool
      #     image: MSSecurity-1ES-Windows-2022
      #     os: windows
      #   steps:
      #   - task: UseDotNet@2
      #     displayName: Install Dotnet SDK
      #     inputs:
      #       packageType: 'sdk'
      #       version: '9.0.x'
      #   - task: UseDotNet@2
      #     displayName: Install Dotnet SDK
      #     inputs:
      #       packageType: 'sdk'
      #       version: '8.0.x'
      #   - task: DotNetCoreCLI@2
      #     displayName: Dotnet Build .NET Core App
      #     inputs:
      #       command: 'build'
      #       arguments: 'OAT.Tests/OAT.Tests.csproj'
      #   - task: VSTest@3
      # - job: 'vs_test_linux'
      #   pool:
      #     name: MSSecurity-1ES-Build-Agents-Pool
      #     image: MSSecurity-1ES-Ubuntu-2204
      #     os: linux
      #   steps:
      #   - task: UseDotNet@2
      #     displayName: Install Dotnet SDK
      #     inputs:
      #       packageType: 'sdk'
      #       version: '9.0.x'
      #   - task: UseDotNet@2
      #     displayName: Install Dotnet SDK
      #     inputs:
      #       packageType: 'sdk'
      #       version: '8.0.x'
      #   - task: DotNetCoreCLI@2
      #     displayName: Dotnet Build .NET Core App
      #     inputs:
      #       command: 'build'
      #       arguments: 'OAT.Tests/OAT.Tests.csproj'
      #   - task: VSTest@3
      - template: dotnet-test-job.yml@templates
        parameters:
          jobName: 'dotnet_test_windows'
          dotnetVersions: ['8.0.x','9.0.x']
          poolName: MSSecurity-1ES-Build-Agents-Pool
          poolImage: MSSecurity-1ES-Windows-2022
          poolOs: windows
          projectPath: 'OAT.Tests/OAT.Tests.csproj'
          dotnetTestArgs: '--logger trx'
      - template: dotnet-test-job.yml@templates
        parameters:
          jobName: 'dotnet_test_ubuntu'
          dotnetVersions: ['8.0.x','9.0.x']
          poolName: MSSecurity-1ES-Build-Agents-Pool
          poolImage: MSSecurity-1ES-Ubuntu-2204
          poolOs: linux
          projectPath: 'OAT.Tests/OAT.Tests.csproj'
          dotnetTestArgs: '--logger trx'

    - stage: Build
      dependsOn:
      - Test
      jobs:
      - template: nuget-build-job.yml@templates
        parameters:
          jobName: 'pack_lib'
          buildConfiguration: ${{ variables.BuildConfiguration }}
          dotnetVersion: ${{ variables.DotnetVersion }}
          projectPath: 'OAT/OAT.csproj'
          projectName: 'OAT'
          artifactName: 'lib-archive'
          preBuild:
          - template: nbgv-set-version-steps.yml@templates
      - template: nuget-build-job.yml@templates
        parameters:
          jobName: 'pack_scripting'
          buildConfiguration: ${{ variables.BuildConfiguration }}
          dotnetVersion: ${{ variables.DotnetVersion }}
          projectPath: 'OAT.Scripting/OAT.Scripting.csproj'
          projectName: 'OAT_Scripting'
          artifactName: 'script-archive'
          preBuild:
          - template: nbgv-set-version-steps.yml@templates
      - template: nuget-build-job.yml@templates
        parameters:
          jobName: 'pack_blazor'
          buildConfiguration: ${{ variables.BuildConfiguration }}
          dotnetVersion: ${{ variables.DotnetVersion }}
          projectPath: 'OAT.Blazor.Components/OAT.Blazor.Components.csproj'
          projectName: 'OAT_Blazor_Components'
          artifactName: 'blazor-archive'
          preBuild:
          - template: nbgv-set-version-steps.yml@templates
