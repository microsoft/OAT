@inherits BaseInput;
@using Microsoft.CST.OAT.Utils;

<select class="form-control" id="@id" @bind="SubProperty" data-input-type="enum-input" disabled="@isDisabled">
    @for (int i = 0; i < values.Count; i++)
    {
        <option value="@i">@values[i].ToString()</option>
    }
</select>

@code {
    [Parameter]
    public Type? type { get; set; }

    List<Enum> values
    {
        get
        {
            var vals = new List<Enum>();
            if (type is null)
            {
                return vals;
            }

            foreach(var value in Enum.GetValues(type))
            {
                vals.Add((Enum)value);
            }
            return vals;
        }
    }

    public int SubProperty
    {
        get
        {
            if (Helpers.GetValueByPropertyOrFieldName(Object, SubPath) is Enum val){
                var idx = values.IndexOf(val);
                return idx >= 0 ? idx : 0;
            }
            return 0;
        }
        set
        {
            Helpers.SetValueByPropertyOrFieldName(Object, SubPath, values[value]);
            onChangeAction.Invoke();
        }
    }
}