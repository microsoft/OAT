@inherits BaseInput;
@using Microsoft.CST.OAT.Utils;

<input class="form-control" id="@id" type="text" @bind="SubProperty" placeholder="@placeholder" data-input-type="string-input" disabled="@isDisabled"/>

@code {
    [Parameter]
    public string placeholder { get; set; } = string.Empty;
    
    public string SubProperty
    {
        get
        {
            var val = Helpers.GetValueByPropertyOrFieldName(Object, SubPath);
            if (val is byte[] bytes)
            {
                return Convert.ToBase64String(bytes);
            }
            else if (val is IList<byte> bytesList)
            {
                return Convert.ToBase64String(bytesList.ToArray());
            }
            return string.Empty;
        }
        set
        {
            try
            {
                var bytes = Convert.FromBase64String(value);
                var val = Helpers.GetValueByPropertyOrFieldName(Object, SubPath);
                if (val is IList<byte> bytesList)
                {
                    if (bytesList.GetType().IsArray)
                    {
                        Helpers.SetValueByPropertyOrFieldName(Object, SubPath, bytes);
                    }
                    else
                    {
                        Helpers.SetValueByPropertyOrFieldName(Object, SubPath, bytes.ToList());
                    }
                }
            }
            catch(System.FormatException)
            {
                // Invalid Base64
            }
            
            onChangeAction.Invoke();
        }
    }
}